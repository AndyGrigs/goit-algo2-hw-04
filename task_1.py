import networkx as nx

def create_logistics_graph() -> nx.DiGraph:
    """
    Створює граф логістичної мережі
    """
    G = nx.DiGraph()
    
    edges = [
        # ============ Від Терміналів до Складів ============
        # Термінал 1
        ("Термінал_1", "Склад_1", 25),
        ("Термінал_1", "Склад_2", 20),
        ("Термінал_1", "Склад_3", 15),
        
        # Термінал 2
        ("Термінал_2", "Склад_3", 15),
        ("Термінал_2", "Склад_4", 30),
        ("Термінал_2", "Склад_2", 10),
        
        # ============ Від Складів до Магазинів ============
        # Склад 1
        ("Склад_1", "Магазин_1", 15),
        ("Склад_1", "Магазин_2", 10),
        ("Склад_1", "Магазин_3", 20),
        
        
        #Склад 2 → Магазини 4, 5, 6
        ("Склад_2", "Магазин_4", 15),
        ("Склад_2", "Магазин_5", 10),
        ("Склад_2", "Магазин_6", 25),
        
        
        #Склад 3 → Магазини 7, 8, 9
        ("Склад_3", "Магазин_7", 20),
        ("Склад_3", "Магазин_8", 15),
        ("Склад_3", "Магазин_9", 10),
        
        #Склад 4 → Магазини 10, 11, 12, 13, 14
        ("Склад_4", "Магазин_10", 20),
        ("Склад_4", "Магазин_11", 10),
        ("Склад_4", "Магазин_12", 15),
        ("Склад_4", "Магазин_13", 5),
        ("Склад_4", "Магазин_14", 10),
    ]
    
    for source, target, capacity in edges:
        G.add_edge(source, target, capacity=capacity)
    

    return G